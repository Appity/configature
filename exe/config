#!/usr/bin/env ruby

# == Imports ================================================================

require 'fileutils'
require 'optparse'

require_relative '../lib/configature'

# == Main ===================================================================

options = {
  verbose: false,
  quiet: false,
  config_dir: Configature::Directory.find('config')
}

program = OptionParser.new do |opts|
  opts.banner = "Usage: config [options]"

  opts.on('-q', '--quiet', 'Run quietly with no output') do
    options[:quiet] = true
  end
  opts.on('-v', '--[no-]verbose', 'Run verbosely') do |v|
    options[:verbose] = v
  end

  opts.on('-d', '--config-dir DIR', 'Configuration directory target') do |dir|
    options[:config_dir] = dir
  end
end

args = program.parse!

if (options[:verbose])
  puts 'Checking configuration directory %s' % options[:config_dir]
end

if (options[:quiet])
  $stdout = StringIO.new
end

case (arg = args.first)
when 'clean'
  Configature::Stamper.new(options[:config_dir]).clean! do |target|
    puts "* %s: removed" % File.basename(target)
  end
when nil
  Configature::Stamper.new(options[:config_dir]).apply! do |source, target, created:, existing:, config_required:|
    if (created)
      print "* %s: created" % File.basename(target)
    else
      print "* %s: present" % File.basename(target)
    end

    if (config_required)
      print ' (requires configuration)'
    end

    puts
  end
else
  $stderr.puts("Unknown command #{arg.inspect}")
  exit(-1)
end
